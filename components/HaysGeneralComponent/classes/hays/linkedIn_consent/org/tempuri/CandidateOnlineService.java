
package hays.linkedIn_consent.org.tempuri;

import intradoc.common.SystemUtils;
import intradoc.shared.SharedObjects;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "CandidateOnlineService", targetNamespace = "http://tempuri.org/", wsdlLocation = "http://hrlvmat1263.emea.hays.loc:4042/Services/CandidateOnlineService.svc?wsdl")
public class CandidateOnlineService
    extends Service
{

    private final static URL CANDIDATEONLINESERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(hays.linkedIn_consent.org.tempuri.CandidateOnlineService.class.getName());

    static {
		 URL url = null;
		String countryCode=SharedObjects.getEnvironmentValue("countryCode");
		SystemUtils.trace("linkedin_consent_mail","Inside LinkedInAccessConsent if ....." + countryCode);
        String endPoint=SharedObjects.getEnvironmentValue("WSDL_ENDPOINT_LINKEDIN_CONSENT_"+countryCode);
        try {
            url = new URL(endPoint);
			}catch (MalformedURLException e) 
		{
            e.printStackTrace();
        }
       
        CANDIDATEONLINESERVICE_WSDL_LOCATION = url;
    }

    public CandidateOnlineService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CandidateOnlineService() {
        super(CANDIDATEONLINESERVICE_WSDL_LOCATION, new QName("http://tempuri.org/", "CandidateOnlineService"));
    }

    /**
     * 
     * @return
     *     returns ICandidateOnlineService
     */
    @WebEndpoint(name = "BasicHttpBinding_ICandidateOnlineService")
    public ICandidateOnlineService getBasicHttpBindingICandidateOnlineService() {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_ICandidateOnlineService"), ICandidateOnlineService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ICandidateOnlineService
     */
    @WebEndpoint(name = "BasicHttpBinding_ICandidateOnlineService")
    public ICandidateOnlineService getBasicHttpBindingICandidateOnlineService(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_ICandidateOnlineService"), ICandidateOnlineService.class, features);
    }

}
