
package hays.emailServiceClient;

import intradoc.common.SystemUtils;
import intradoc.shared.SharedObjects;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "EmailPublisherService", targetNamespace = "http://tempuri.org/", wsdlLocation = "http://sasoat1.sguk.hays.loc:4047/Services/EmailPublisherService.svc?wsdl")
public class EmailPublisherService
    extends Service
{

    private final static URL EMAILPUBLISHERSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(hays.emailServiceClient.EmailPublisherService.class.getName());

    static {
        URL url = null;
        String endPoint =""; 
        try {
            URL baseUrl;
            baseUrl = hays.emailServiceClient.EmailPublisherService.class.getResource(".");
            //url = new URL(baseUrl, "http://sasoat1.sguk.hays.loc:4047/Services/EmailPublisherService.svc?wsdl"); commented to accomodate multiple WSDLs
            
             
            String locale = SharedObjects.getEnvironmentValue("country");
            String []countryFromLocale = locale.split("_");
            String countryCode = countryFromLocale[1];
            SystemUtils.trace("hays_req_cand_info_Email_WS","countryCode in EmailPublisherService :::"+countryCode); 
             
            endPoint=SharedObjects.getEnvironmentValue("WSDL_ENDPOINT_"+countryCode);
            
            /* commented after code review
			if("GB".equalsIgnoreCase(countryCode))
			{
				endPoint=SharedObjects.getEnvironmentValue("WSDL_ENDPOINT_UK");
			}
			else if("ES".equalsIgnoreCase(countryCode) || "SE".equalsIgnoreCase(countryCode) || "PL".equalsIgnoreCase(countryCode) || "NL".equalsIgnoreCase(countryCode)  || "CZ".equalsIgnoreCase(countryCode)   || "HU".equalsIgnoreCase(countryCode)  )
			{
				endPoint=SharedObjects.getEnvironmentValue("WSDL_ENDPOINT_INST1");
			}
			else if("IND".equalsIgnoreCase(countryCode) || "IE".equalsIgnoreCase(countryCode) || "AE".equalsIgnoreCase(countryCode) || "IT".equalsIgnoreCase(countryCode)  || "ITL".equalsIgnoreCase(countryCode))
			{
				endPoint=SharedObjects.getEnvironmentValue("WSDL_ENDPOINT_INST2");
			}
			else if("FR".equalsIgnoreCase(countryCode) || "LU".equalsIgnoreCase(countryCode))
			{
				endPoint=SharedObjects.getEnvironmentValue("WSDL_ENDPOINT_FR");
			}
			else if("BR".equalsIgnoreCase(countryCode) || "CA".equalsIgnoreCase(countryCode) || "US".equalsIgnoreCase(countryCode) || "MX".equalsIgnoreCase(countryCode) || "DK".equalsIgnoreCase(countryCode) || "RU".equalsIgnoreCase(countryCode) || "PT".equalsIgnoreCase(countryCode))
			{
				endPoint=SharedObjects.getEnvironmentValue("WSDL_ENDPOINT_AM");
			} */
            
			SystemUtils.trace("hays_req_cand_info_Email_WS","endPoint in EmailPublisherService :::"+endPoint); 
			
            url = new URL(baseUrl, endPoint); //added to accomodate multiple WSDLs
        
        
        } catch (MalformedURLException e) {
            //logger.warning("Failed to create URL for the wsdl Location: 'http://sasoat1.sguk.hays.loc:4047/Services/EmailPublisherService.svc?wsdl', retrying as a local file");
        	logger.warning("Failed to create URL for the wsdl Location: "+endPoint);
        	logger.warning(e.getMessage());
        }
        EMAILPUBLISHERSERVICE_WSDL_LOCATION = url;
    }

    public EmailPublisherService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EmailPublisherService() {
        super(EMAILPUBLISHERSERVICE_WSDL_LOCATION, new QName("http://tempuri.org/", "EmailPublisherService"));
    }

    /**
     * 
     * @return
     *     returns IEmailPublisherService
     */
    @WebEndpoint(name = "BasicHttpBinding_IEmailPublisherService")
    public IEmailPublisherService getBasicHttpBindingIEmailPublisherService() {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IEmailPublisherService"), IEmailPublisherService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IEmailPublisherService
     */
    @WebEndpoint(name = "BasicHttpBinding_IEmailPublisherService")
    public IEmailPublisherService getBasicHttpBindingIEmailPublisherService(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IEmailPublisherService"), IEmailPublisherService.class, features);
    }

}
